#!/usr/bin/env bash
set -e

APPLIANCE=lapps
SERVER=http://downloads.lappsgrid.org

parsed=false        # used in parsing options (currently -a, -b)
make_docker=false   # true if -b is given, re-build docker images for each module (& galaxy)
all=false           # true if -a option is given, always add all modules in current directory (ignoring cmd arguments)

function parse_options {
    if [ "$1" = "-b" ] ; then
        make_docker=true
    elif [ "$1" = "-a" ] ; then 
        all=true
    elif [ "$1" != "-"* ] ; then 
        parsed=true
    fi
}

function validate_module {
    # strip path seps and only returns a tool module name, excluding base modules (galaxy, build)
    if [ "$1" = "build/" -o "$1" = "galaxy/" ] ; then 
        echo ""
    else 
        echo `echo $1 | sed 's/\/$//g'`
    fi
}

function prep_modules {
    for module in $@ ; do 
        echo "$modules `validate_module $module`"
    done
}

# parse flags first 
while [ "$parsed" = false ] ; do 
    parse_options $1
    if [ "$parsed" = false ] ; then
        shift
    fi
done

# then preprare the list of modules to include
if [ "$all" = true ] ; then 
    modules=`prep_modules $(ls -d */)`
else
    modules=`prep_modules "$@"`
fi

# generate docker configuration
groovy YamlBuilder.groovy $APPLIANCE $modules > docker-compose.yml

# start building galaxy with newly generated tool_conf and docker-compose config (yaml)
cp -R galaxy build

function build_appliance {
    # given a list of moudles as arguments
    while [ -n "$1" ] ; do
        # for each module
        echo "Building $1"
        # copy base files
        cp -R $1/tools build
        # this will minimize (remove empty sections) when building the final tool_conf.xml
        if [ -z "$2" ] ; then OPTS="-m" ; fi
        # include tools in the module in the tool_conf.xml
        tce $OPTS -c build/tool_conf.xml -o build/tool_conf.xml $1/tool_conf.groovy

        # now go into the module dir and build docker, if specified in option
        # NOTE that htrc module does not have its own docker container, but lives ni galaxy docker container
        # so we're skipping 'htrc' module
        if [ "$make_docker" = "true" -a "$1" != "htrc" ] ; then
            cd $1 
            build_docker_image $1
            cd ..
        fi
        shift
    done
    cd build 
    build_docker_image "galaxy-htrc"

}

function build_docker_image {
    # given module name as $1,

    # first download war files (in tgz archive) from the server
    echo "Downloading tool files for $1, this will remove all previously downdload files"
    if [ ! -d packages ] ; then mkdir packages ; fi
    cd packages 
    if [ `ls *.tgz 2> /dev/null` ] ; then rm *.tgz ; fi
    for package in `cat ../package_list.txt`; do 
        wget $SERVER/$package.tgz
    done
    cd ..

    # then build docker image - this will require tool tgz files in the place 
    sudo docker build -t $APPLIANCE/$1 .
}


build_appliance $modules

