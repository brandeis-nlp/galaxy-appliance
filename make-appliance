#!/usr/bin/env bash
set -e

#export APPLIANCE=deiis
make_docker=false
export_dir=

while getopts "be:h" opt ; do
	case $opt in
		b)
			echo "option -b"
			make_docker=true
			;;
		e)
			echo "option -e $OPTARG"
			export_dir=$OPTARG
			;;
		h)
			echo "./make-appliance [-b] [-e <EXPORT_DIR>] name image [image...]"
			exit 1
			;;
		*)
			echo "Unhandled option: $1"
			exit 1
			;;	
		\?)
			echo "Invalid option: -$OPTARG" >&2
			exit 1
			;;
		:)
			echo "Option -$OPTARG requires an argument." >&2
			exit 1
			;;
	esac
done
shift $((OPTIND-1))
export APPLIANCE=$1
shift

if [ -d build ] ; then
	echo "Cleaning up from a previous build."
	rm -rf build
fi
cp -R galaxy build

if [ -n "$export_dir" ] ; then
	groovy YamlBuilder.groovy -e $export_dir $APPLIANCE $@ > docker-compose.yml
else
	groovy YamlBuilder.groovy $APPLIANCE $@ > docker-compose.yml
fi

while [ -n "$1" ] ; do
	echo "Building $1"
	cp -R $1/tools build
	if [ -z "$2" ] ; then
		# Minimize (remove empty sections) when building the final tool_conf.xml
		OPTS="-m"
	fi
	tce $OPTS -c build/tool_conf.xml -o build/tool_conf.xml $1/tool_conf.groovy
	if [ "$make_docker" = "true" ] ; then
		cd $1 
		make
		cd -
	fi
	shift
done

cd build
make

